{
  "swagger": "2.0",
  "info": {
    "version": "2016-08-01",
    "title": "WebApps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a backup of an app.",
        "description": "Creates a backup of an app.",
        "operationId": "WebApps_Backup",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Backup configuration. You can use the JSON response from the POST action as input here.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets existing backups of an app.",
        "description": "Gets existing backups of an app.",
        "operationId": "WebApps_ListBackups",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/discover": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Discovers an existing app backup that can be restored from a blob in Azure storage.",
        "description": "Discovers an existing app backup that can be restored from a blob in Azure storage.",
        "operationId": "WebApps_DiscoverRestore",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a backup of an app by its ID.",
        "description": "Gets a backup of an app by its ID.",
        "operationId": "WebApps_GetBackupStatus",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a backup of an app by its ID.",
        "description": "Deletes a backup of an app by its ID.",
        "operationId": "WebApps_DeleteBackup",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted web app backup item."
          },
          "404": {
            "description": "Web app backup item does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "description": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecrets",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a specific backup to another app (or deployment slot, if specified).",
        "description": "Restores a specific backup to another app (or deployment slot, if specified).",
        "operationId": "WebApps_Restore",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the backup configuration of an app.",
        "description": "Updates the backup configuration of an app.",
        "operationId": "WebApps_UpdateBackupConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Edited backup configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes the backup configuration of an app.",
        "description": "Deletes the backup configuration of an app.",
        "operationId": "WebApps_DeleteBackupConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted backup configuration."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the backup configuration of an app.",
        "description": "Gets the backup configuration of an app.",
        "operationId": "WebApps_GetBackupConfiguration",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments for an app, or a deployment slot, or for an instance of a scaled-out app.",
        "description": "List deployments for an app, or a deployment slot, or for an instance of a scaled-out app.",
        "operationId": "WebApps_ListInstanceDeployments",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "description": "Get a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "operationId": "WebApps_GetInstanceDeployment",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "description": "Create a deployment for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "operationId": "WebApps_CreateInstanceDeployment",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing deployment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Deployment details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "description": "Delete a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "operationId": "WebApps_DeleteInstanceDeployment",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted deployment"
          },
          "204": {
            "description": "Deployment does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Shows whether an app can be cloned to another resource group or subscription.",
        "description": "Shows whether an app can be cloned to another resource group or subscription.",
        "operationId": "WebApps_IsCloneable",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteCloneability"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metrics": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets performance metrics of an app (or deployment slot, if specified).",
        "description": "Gets performance metrics of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListMetrics",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "description": "Specify \"true\" to include metric details in the response. It is \"false\" by default.",
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only metrics specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "x-ms-skip-url-encoding": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/recover": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Recovers a deleted web app.",
        "description": "Recovers a deleted web app.",
        "operationId": "WebApps_Recover",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryEntity",
            "in": "body",
            "description": "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSiteRecoveryEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoverResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a backup of an app.",
        "description": "Creates a backup of an app.",
        "operationId": "WebApps_BackupSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Backup configuration. You can use the JSON response from the POST action as input here.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a backup for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets existing backups of an app.",
        "description": "Gets existing backups of an app.",
        "operationId": "WebApps_ListBackupsSlot",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get backups of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/discover": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Discovers an existing app backup that can be restored from a blob in Azure storage.",
        "description": "Discovers an existing app backup that can be restored from a blob in Azure storage.",
        "operationId": "WebApps_DiscoverRestoreSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will perform discovery for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a backup of an app by its ID.",
        "description": "Gets a backup of an app by its ID.",
        "operationId": "WebApps_GetBackupStatusSlot",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a backup of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a backup of an app by its ID.",
        "description": "Deletes a backup of an app by its ID.",
        "operationId": "WebApps_DeleteBackupSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete a backup of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted web app backup item."
          },
          "404": {
            "description": "Web app backup item does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "description": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecretsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a specific backup to another app (or deployment slot, if specified).",
        "description": "Restores a specific backup to another app (or deployment slot, if specified).",
        "operationId": "WebApps_RestoreSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "ID of the backup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will restore a backup of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the backup configuration of an app.",
        "description": "Updates the backup configuration of an app.",
        "operationId": "WebApps_UpdateBackupConfigurationSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Edited backup configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the backup configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes the backup configuration of an app.",
        "description": "Deletes the backup configuration of an app.",
        "operationId": "WebApps_DeleteBackupConfigurationSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the backup configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted backup configuration."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the backup configuration of an app.",
        "description": "Gets the backup configuration of an app.",
        "operationId": "WebApps_GetBackupConfigurationSlot",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the backup configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "description": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "operationId": "WebApps_ListConfigurationSnapshotInfoSlot",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SiteConfigurationSnapshotInfo"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a snapshot of the configuration of an app at a previous point in time.",
        "description": "Gets a snapshot of the configuration of an app at a previous point in time.",
        "operationId": "WebApps_GetConfigurationSnapshotSlot",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The ID of the snapshot to read.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfigResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}/recover": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Reverts the configuration of an app to a previous snapshot.",
        "description": "Reverts the configuration of an app to a previous snapshot.",
        "operationId": "WebApps_RecoverSiteConfigurationSnapshotSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The ID of the snapshot to read.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments for an app, or a deployment slot, or for an instance of a scaled-out app.",
        "description": "List deployments for an app, or a deployment slot, or for an instance of a scaled-out app.",
        "operationId": "WebApps_ListInstanceDeploymentsSlot",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "description": "Get a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "operationId": "WebApps_GetInstanceDeploymentSlot",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API gets a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "description": "Create a deployment for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "operationId": "WebApps_CreateInstanceDeploymentSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing deployment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API creates a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Deployment details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "description": "Delete a deployment by its ID for an app, a specific deployment slot, and/or a specific scaled-out instance.",
        "operationId": "WebApps_DeleteInstanceDeploymentSlot",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted deployment"
          },
          "204": {
            "description": "Deployment does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Shows whether an app can be cloned to another resource group or subscription.",
        "description": "Shows whether an app can be cloned to another resource group or subscription.",
        "operationId": "WebApps_IsCloneableSlot",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. By default, this API returns information on the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteCloneability"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metrics": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets performance metrics of an app (or deployment slot, if specified).",
        "description": "Gets performance metrics of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListMetricsSlot",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the deployment slot. If a slot is not specified, the API will get metrics of the production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "description": "Specify \"true\" to include metric details in the response. It is \"false\" by default.",
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only metrics specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "x-ms-skip-url-encoding": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/recover": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Recovers a deleted web app.",
        "description": "Recovers a deleted web app.",
        "operationId": "WebApps_RecoverSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryEntity",
            "in": "body",
            "description": "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSiteRecoveryEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoverResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user.",
        "description": "Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshotsSlot",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Website Slot",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user.",
        "description": "Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshots",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ApiDefinitionInfo": {
      "description": "Information about the formal API definition for the app.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the API definition.",
          "type": "string"
        }
      }
    },
    "ApplicationLogsConfig": {
      "description": "Application logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemApplicationLogsConfig",
          "description": "Application logs to file system configuration."
        },
        "azureTableStorage": {
          "$ref": "#/definitions/AzureTableStorageApplicationLogsConfig",
          "description": "Application logs to azure table storage configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageApplicationLogsConfig",
          "description": "Application logs to blob storage configuration."
        }
      }
    },
    "AutoHealActions": {
      "description": "Actions which to take by the auto-heal module when a rule is triggered.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Predefined action to be taken.",
          "enum": [
            "Recycle",
            "LogEvent",
            "CustomAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AutoHealActionType",
            "modelAsString": false
          }
        },
        "customAction": {
          "$ref": "#/definitions/AutoHealCustomAction",
          "description": "Custom action to be taken."
        },
        "minProcessExecutionTime": {
          "description": "Minimum time the process must execute\n before taking the action",
          "type": "string"
        }
      }
    },
    "AutoHealCustomAction": {
      "description": "Custom action to be executed\n when an auto heal rule is triggered.",
      "type": "object",
      "properties": {
        "exe": {
          "description": "Executable to be run.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the executable.",
          "type": "string"
        }
      }
    },
    "AutoHealRules": {
      "description": "Rules that can be defined for auto-heal.",
      "type": "object",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/AutoHealTriggers",
          "description": "Conditions that describe when to execute the auto-heal actions."
        },
        "actions": {
          "$ref": "#/definitions/AutoHealActions",
          "description": "Actions to be executed when a rule is triggered."
        }
      }
    },
    "AutoHealTriggers": {
      "description": "Triggers for auto-heal.",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestsBasedTrigger",
          "description": "A rule based on total requests."
        },
        "privateBytesInKB": {
          "format": "int32",
          "description": "A rule based on private bytes.",
          "type": "integer"
        },
        "statusCodes": {
          "description": "A rule based on status codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCodesBasedTrigger"
          }
        },
        "slowRequests": {
          "$ref": "#/definitions/SlowRequestsBasedTrigger",
          "description": "A rule based on request execution time."
        }
      }
    },
    "AzureBlobStorageApplicationLogsConfig": {
      "description": "Application logs azure blob storage configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\n Remove blobs older than X days.\n 0 or lower means no retention.",
          "type": "integer"
        }
      }
    },
    "AzureBlobStorageHttpLogsConfig": {
      "description": "Http logs to azure blob storage configuration.",
      "type": "object",
      "properties": {
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\n Remove blobs older than X days.\n 0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "Enabled.",
          "type": "boolean"
        }
      }
    },
    "AzureTableStorageApplicationLogsConfig": {
      "description": "Application logs to Azure table storage configuration.",
      "required": [
        "sasUrl"
      ],
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS URL to an Azure table with add/query/delete permissions.",
          "type": "string"
        }
      }
    },
    "BackupItem": {
      "description": "Backup description.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupItem resource specific properties",
          "properties": {
            "id": {
              "format": "int32",
              "description": "Id of the backup.",
              "type": "integer",
              "readOnly": true,
              "x-ms-client-name": "BackupId"
            },
            "storageAccountUrl": {
              "description": "SAS URL for the storage account container which contains this backup.",
              "type": "string",
              "readOnly": true
            },
            "blobName": {
              "description": "Name of the blob which contains data for this backup.",
              "type": "string",
              "readOnly": true
            },
            "name": {
              "description": "Name of this backup.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Backup status.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created",
                "Skipped",
                "PartiallySucceeded",
                "DeleteInProgress",
                "DeleteFailed",
                "Deleted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BackupItemStatus",
                "modelAsString": false
              }
            },
            "sizeInBytes": {
              "format": "int64",
              "description": "Size of the backup in bytes.",
              "type": "integer",
              "readOnly": true
            },
            "created": {
              "format": "date-time",
              "description": "Timestamp of the backup creation.",
              "type": "string",
              "readOnly": true
            },
            "log": {
              "description": "Details regarding this backup. Might contain an error message.",
              "type": "string",
              "readOnly": true
            },
            "databases": {
              "description": "List of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              },
              "readOnly": true
            },
            "scheduled": {
              "description": "True if this backup has been created due to a schedule being triggered.",
              "type": "boolean",
              "readOnly": true
            },
            "lastRestoreTimeStamp": {
              "format": "date-time",
              "description": "Timestamp of a last restore operation which used this backup.",
              "type": "string",
              "readOnly": true
            },
            "finishedTimeStamp": {
              "format": "date-time",
              "description": "Timestamp when this backup finished.",
              "type": "string",
              "readOnly": true
            },
            "correlationId": {
              "description": "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.",
              "type": "string",
              "readOnly": true
            },
            "websiteSizeInBytes": {
              "format": "int64",
              "description": "Size of the original web app which has been backed up.",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupItemCollection": {
      "description": "Collection of backup items.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupItem"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "BackupRequest": {
      "description": "Description of a backup which will be performed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "BackupRequest resource specific properties",
          "required": [
            "name",
            "storageAccountUrl"
          ],
          "properties": {
            "name": {
              "description": "Name of the backup.",
              "type": "string",
              "x-ms-client-name": "BackupRequestName"
            },
            "enabled": {
              "description": "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.",
              "type": "boolean"
            },
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "backupSchedule": {
              "$ref": "#/definitions/BackupSchedule",
              "description": "Schedule for the backup if it is executed periodically."
            },
            "databases": {
              "description": "Databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "type": {
              "description": "Type of the backup.",
              "enum": [
                "Default",
                "Clone",
                "Relocation"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupSchedule": {
      "description": "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.",
      "required": [
        "frequencyInterval",
        "frequencyUnit",
        "keepAtLeastOneBackup",
        "retentionPeriodInDays"
      ],
      "type": "object",
      "properties": {
        "frequencyInterval": {
          "format": "int32",
          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
          "default": 7,
          "type": "integer"
        },
        "frequencyUnit": {
          "description": "The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
          "default": "Day",
          "enum": [
            "Day",
            "Hour"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrequencyUnit",
            "modelAsString": false
          }
        },
        "keepAtLeastOneBackup": {
          "description": "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.",
          "default": true,
          "type": "boolean"
        },
        "retentionPeriodInDays": {
          "format": "int32",
          "description": "After how many days backups should be deleted.",
          "default": 30,
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "When the schedule should start working.",
          "type": "string"
        },
        "lastExecutionTime": {
          "format": "date-time",
          "description": "Last time when this schedule was triggered.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CloningInfo": {
      "description": "Information needed for cloning operation.",
      "required": [
        "sourceWebAppId"
      ],
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Correlation ID of cloning operation. This ID ties multiple cloning operations\n together to use the same snapshot.",
          "type": "string"
        },
        "overwrite": {
          "description": "<code>true</code> to overwrite destination app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneCustomHostNames": {
          "description": "<code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneSourceControl": {
          "description": "<code>true</code> to clone source control from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "sourceWebAppId": {
          "description": "ARM resource ID of the source app. App resource ID is of the form \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        },
        "hostingEnvironment": {
          "description": "App Service Environment.",
          "type": "string"
        },
        "appSettingsOverrides": {
          "description": "Application setting overrides for cloned app. If specified, these settings override the settings cloned \n from source app. Otherwise, application settings from source app are retained.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configureLoadBalancing": {
          "description": "<code>true</code> to configure load balancing for source and destination app.",
          "type": "boolean"
        },
        "trafficManagerProfileId": {
          "description": "ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form \n /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.",
          "type": "string"
        },
        "trafficManagerProfileName": {
          "description": "Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.",
          "type": "string"
        },
        "ignoreQuotas": {
          "description": "<code>true</code> if quotas should be ignored; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "ConnStringInfo": {
      "description": "Database connection string information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of connection string.",
          "type": "string"
        },
        "connectionString": {
          "description": "Connection string value.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnStringValueTypePair": {
      "description": "Database connection string value to type pair.",
      "required": [
        "value",
        "type"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of pair.",
          "type": "string"
        },
        "type": {
          "description": "Type of database.",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache",
            "PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnectionStringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Connection strings.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnStringValueTypePair"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CorsSettings": {
      "description": "Cross-Origin Resource Sharing (CORS) settings for the app.",
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "description": "Gets or sets the list of origins that should be allowed to make cross-origin\n calls (for example: http://example.com:12345). Use \"*\" to allow all.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CsmPublishingProfileOptions": {
      "description": "Publishing options for requested profile.",
      "type": "object",
      "properties": {
        "format": {
          "description": "Name of the format. Valid values are: \n FileZilla3\n WebDeploy -- default\n Ftp",
          "enum": [
            "FileZilla3",
            "WebDeploy",
            "Ftp"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublishingProfileFormat",
            "modelAsString": true
          }
        }
      }
    },
    "CsmSiteRecoveryEntity": {
      "description": "Details about app recovery operation.",
      "type": "object",
      "properties": {
        "snapshotTime": {
          "format": "date-time",
          "description": "Point in time in which the app recovery should be attempted.",
          "type": "string"
        },
        "siteName": {
          "description": "[Optional] Destination app name into which app should be recovered. This is case when new app should be created instead.",
          "type": "string"
        },
        "slotName": {
          "description": "[Optional] Destination app slot name into which app should be recovered.",
          "type": "string"
        }
      }
    },
    "CsmSlotEntity": {
      "description": "Deployment slot parameters.",
      "required": [
        "targetSlot",
        "preserveVnet"
      ],
      "type": "object",
      "properties": {
        "targetSlot": {
          "description": "Destination deployment slot during swap operation.",
          "type": "string"
        },
        "preserveVnet": {
          "description": "<code>true</code> to preserve Virtual Network to the slot during swap; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "CsmUsageQuota": {
      "description": "Usage of the quota resource.",
      "type": "object",
      "properties": {
        "unit": {
          "description": "Units of measurement for the quota resourse.",
          "type": "string"
        },
        "nextResetTime": {
          "format": "date-time",
          "description": "Next reset time for the resource counter.",
          "type": "string"
        },
        "currentValue": {
          "format": "int64",
          "description": "The current value of the resource counter.",
          "type": "integer"
        },
        "limit": {
          "format": "int64",
          "description": "The resource limit.",
          "type": "integer"
        },
        "name": {
          "$ref": "#/definitions/LocalizableString",
          "description": "Quota name."
        }
      }
    },
    "CsmUsageQuotaCollection": {
      "description": "Collection of CSM usage quotas.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmUsageQuota"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Custom domain analysis.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "CustomHostnameAnalysisResult resource specific properties",
          "properties": {
            "isHostnameAlreadyVerified": {
              "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "customDomainVerificationTest": {
              "description": "DNS verification test result.",
              "enum": [
                "Passed",
                "Failed",
                "Skipped"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DnsVerificationTestResult",
                "modelAsString": false
              }
            },
            "customDomainVerificationFailureInfo": {
              "$ref": "#/definitions/ErrorEntity",
              "description": "Raw failure information if DNS verification fails.",
              "readOnly": true
            },
            "hasConflictOnScaleUnit": {
              "description": "<code>true</code> if there is a conflict on a scale unit; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "hasConflictAcrossSubscription": {
              "description": "<code>true</code> if htere is a conflict across subscriptions; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "conflictingAppResourceId": {
              "description": "Name of the conflicting app on scale unit if it's within the same subscription.",
              "type": "string",
              "readOnly": true
            },
            "cNameRecords": {
              "description": "CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "txtRecords": {
              "description": "TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aRecords": {
              "description": "A records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateCNameRecords": {
              "description": "Alternate CName records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateTxtRecords": {
              "description": "Alternate TXT records controller can see for this hostname.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseBackupSetting": {
      "description": "Database backup settings.",
      "required": [
        "databaseType"
      ],
      "type": "object",
      "properties": {
        "databaseType": {
          "description": "Database type (e.g. SqlAzure / MySql).",
          "enum": [
            "SqlAzure",
            "MySql",
            "LocalMySql",
            "PostgreSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatabaseType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        },
        "connectionStringName": {
          "description": "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\n This is used during restore with overwrite connection strings options.",
          "type": "string"
        },
        "connectionString": {
          "description": "Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.",
          "type": "string"
        }
      }
    },
    "Deployment": {
      "description": "User crendentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Deployment resource specific properties",
          "properties": {
            "id": {
              "description": "ID.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "status": {
              "format": "int32",
              "description": "Status.",
              "type": "integer"
            },
            "message": {
              "description": "Message.",
              "type": "string"
            },
            "author": {
              "description": "Author.",
              "type": "string"
            },
            "deployer": {
              "description": "Deployer.",
              "type": "string"
            },
            "authorEmail": {
              "description": "Author email.",
              "type": "string"
            },
            "startTime": {
              "format": "date-time",
              "description": "Start time.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "endTime": {
              "format": "date-time",
              "description": "End time.",
              "type": "string"
            },
            "active": {
              "description": "Active.",
              "type": "boolean"
            },
            "details": {
              "description": "Detail.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeploymentCollection": {
      "description": "Collection of app deployments.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "EnabledConfig": {
      "description": "Enabled configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled.",
          "type": "boolean"
        }
      }
    },
    "ErrorEntity": {
      "description": "Body of the error response returned from the API.",
      "type": "object",
      "properties": {
        "extendedCode": {
          "description": "Type of error.",
          "type": "string"
        },
        "messageTemplate": {
          "description": "Message template.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the template.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "innerErrors": {
          "description": "Inner errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        },
        "code": {
          "description": "Basic error code.",
          "type": "string"
        },
        "message": {
          "description": "Any details of the error.",
          "type": "string"
        }
      }
    },
    "Experiments": {
      "description": "Routing rules in production experiments.",
      "type": "object",
      "properties": {
        "rampUpRules": {
          "description": "List of ramp-up rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RampUpRule"
          }
        }
      }
    },
    "FileSystemApplicationLogsConfig": {
      "description": "Application logs to file system configuration.",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level.",
          "default": "Off",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        }
      }
    },
    "FileSystemHttpLogsConfig": {
      "description": "Http logs to file system configuration.",
      "type": "object",
      "properties": {
        "retentionInMb": {
          "format": "int32",
          "description": "Maximum size in megabytes that http log files can use.\n When reached old log files will be removed to make space for new ones.\n Value can range between 25 and 100.",
          "maximum": 100,
          "minimum": 25,
          "type": "integer"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\n Remove files older than X days.\n 0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "Enabled.",
          "type": "boolean"
        }
      }
    },
    "HandlerMapping": {
      "description": "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \n For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Requests with this extension will be handled using the specified FastCGI application.",
          "type": "string"
        },
        "scriptProcessor": {
          "description": "The absolute path to the FastCGI application.",
          "type": "string"
        },
        "arguments": {
          "description": "Command-line arguments to be passed to the script processor.",
          "type": "string"
        }
      }
    },
    "HostNameBinding": {
      "description": "A hostname binding object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HostNameBinding resource specific properties",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Hostname.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "siteName": {
              "description": "App Service app name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainId": {
              "description": "Fully qualified ARM domain resource URI.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceName": {
              "description": "Azure resource name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "azureResourceType": {
              "description": "Azure resource type.",
              "enum": [
                "Website",
                "TrafficManager"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AzureResourceType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "customHostNameDnsRecordType": {
              "description": "Custom DNS record type.",
              "enum": [
                "CName",
                "A"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomHostNameDnsRecordType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "hostNameType": {
              "description": "Hostname type.",
              "enum": [
                "Verified",
                "Managed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostNameType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sslState": {
              "description": "SSL type",
              "enum": [
                "Disabled",
                "SniEnabled",
                "IpBasedEnabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SslState",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "SSL certificate thumbprint",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "virtualIP": {
              "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
              "type": "string",
              "x-ms-mutability": [
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBindingCollection": {
      "description": "Collection of hostname bindings.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostNameBinding"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "HostNameSslState": {
      "description": "SSL-enabled hostname.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Hostname.",
          "type": "string"
        },
        "sslState": {
          "description": "SSL type.",
          "enum": [
            "Disabled",
            "SniEnabled",
            "IpBasedEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslState",
            "modelAsString": false
          }
        },
        "virtualIP": {
          "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
          "type": "string"
        },
        "thumbprint": {
          "description": "SSL certificate thumbprint.",
          "type": "string"
        },
        "toUpdate": {
          "description": "Set to <code>true</code> to update existing hostname.",
          "type": "boolean"
        },
        "hostType": {
          "description": "Indicates whether the hostname is a standard or repository hostname.",
          "enum": [
            "Standard",
            "Repository"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HostType",
            "modelAsString": false
          }
        }
      }
    },
    "HostingEnvironmentProfile": {
      "description": "Specification for an App Service Environment to use for this resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID of the App Service Environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the App Service Environment.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the App Service Environment.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpLogsConfig": {
      "description": "Http logs configuration.",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemHttpLogsConfig",
          "description": "Http logs to file system configuration."
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageHttpLogsConfig",
          "description": "Http logs to azure blob storage configuration."
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnection resource specific properties",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus namespace.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayName": {
              "description": "The name of the Service Bus relay.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\n normally, use the POST /listKeys API instead.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HybridConnectionKey": {
      "description": "Hybrid Connection key contract. This has the send key name and value for a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "HybridConnectionKey resource specific properties",
          "properties": {
            "sendKeyName": {
              "description": "The name of the send key.",
              "type": "string",
              "readOnly": true
            },
            "sendKeyValue": {
              "description": "The value of the send key.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Identifier": {
      "description": "Identifier.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Identifier resource specific properties",
          "properties": {
            "id": {
              "description": "ID.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "IdentifierCollection": {
      "description": "Collection of identifiers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "LocalizableString": {
      "description": "Localizable string object containing the name and a localized value.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Non-localized name.",
          "type": "string"
        },
        "localizedValue": {
          "description": "Localized name.",
          "type": "string"
        }
      }
    },
    "MigrateMySqlRequest": {
      "description": "MySQL migration request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlRequest resource specific properties",
          "required": [
            "connectionString"
          ],
          "properties": {
            "connectionString": {
              "description": "Connection string to the remote MySQL database to which data should be migrated.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrateMySqlStatus": {
      "description": "MySQL migration status.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "MigrateMySqlStatus resource specific properties",
          "properties": {
            "migrationOperationStatus": {
              "description": "Status of the migration task.",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "OperationStatus",
                "modelAsString": false
              }
            },
            "operationId": {
              "description": "Operation ID for the migration task.",
              "type": "string",
              "readOnly": true
            },
            "localMySqlEnabled": {
              "description": "True if the web app has in app MySql enabled",
              "type": "boolean",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name.",
          "type": "string"
        },
        "value": {
          "description": "Pair value.",
          "type": "string"
        }
      }
    },
    "NetworkFeatures": {
      "description": "Full view of network features for an app (presently VNET integration and Hybrid Connections).",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "NetworkFeatures resource specific properties",
          "properties": {
            "virtualNetworkName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "readOnly": true
            },
            "virtualNetworkConnection": {
              "$ref": "#/definitions/VnetInfo",
              "description": "The Virtual Network summary view.",
              "readOnly": true
            },
            "hybridConnections": {
              "description": "The Hybrid Connections summary view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelayServiceConnectionEntity"
              },
              "readOnly": true
            },
            "hybridConnectionsV2": {
              "description": "The Hybrid Connection V2 (Service Bus) view.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HybridConnection"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Operation": {
      "description": "Operation.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Operation ID.",
          "type": "string"
        },
        "name": {
          "description": "Operation name.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the operation.",
          "enum": [
            "InProgress",
            "Failed",
            "Succeeded",
            "TimedOut",
            "Created"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": false
          }
        },
        "errors": {
          "description": "Any errors associate with the operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "Time when operation has started.",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "Time when operation has been updated.",
          "type": "string"
        },
        "expirationTime": {
          "format": "date-time",
          "description": "Time when operation will expire.",
          "type": "string"
        },
        "geoMasterOperationId": {
          "description": "Applicable only for stamp operation ids.",
          "type": "string"
        }
      }
    },
    "PerfMonCounterCollection": {
      "description": "Collection of performance monitor counters.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonResponse"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "PerfMonResponse": {
      "description": "Performance monitor API response.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The response code.",
          "type": "string"
        },
        "message": {
          "description": "The message.",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/PerfMonSet",
          "description": "The performance monitor counters."
        }
      }
    },
    "PerfMonSample": {
      "description": "Performance monitor sample in a set.",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Point in time for which counter was measured.",
          "type": "string"
        },
        "instanceName": {
          "description": "Name of the server on which the measurement is made.",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value of counter at a certain time.",
          "type": "number"
        }
      }
    },
    "PerfMonSet": {
      "description": "Metric information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique key name of the counter.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period.",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain.",
          "type": "string"
        },
        "values": {
          "description": "Collection of workers that are active during this time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonSample"
          }
        }
      }
    },
    "PremierAddOn": {
      "description": "Premier add-on.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "PremierAddOn resource specific properties",
          "properties": {
            "sku": {
              "description": "SKU.",
              "type": "string"
            },
            "product": {
              "description": "Product.",
              "type": "string"
            },
            "vendor": {
              "description": "Vendor.",
              "type": "string"
            },
            "name": {
              "description": "Name.",
              "type": "string",
              "x-ms-client-name": "PremierAddOnName"
            },
            "location": {
              "description": "Location.",
              "type": "string"
            },
            "tags": {
              "description": "Tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "marketplacePublisher": {
              "description": "Marketplace publisher.",
              "type": "string"
            },
            "marketplaceOffer": {
              "description": "Marketplace offer.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "required": [
        "isPushEnabled"
      ],
      "type": "object",
      "properties": {
        "isPushEnabled": {
          "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
          "type": "boolean"
        },
        "tagWhitelistJson": {
          "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
          "type": "string"
        },
        "tagsRequiringAuth": {
          "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.\n Tags can consist of alphanumeric characters and the following:\n '_', '@', '#', '.', ':', '-'. \n Validation should be performed at the PushRequestHandler.",
          "type": "string"
        },
        "dynamicTagsJson": {
          "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
          "type": "string"
        }
      }
    },
    "RampUpRule": {
      "description": "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.",
      "type": "object",
      "properties": {
        "actionHostName": {
          "description": "Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.",
          "type": "string"
        },
        "reroutePercentage": {
          "format": "double",
          "description": "Percentage of the traffic which will be redirected to <code>ActionHostName</code>.",
          "type": "number"
        },
        "changeStep": {
          "format": "double",
          "description": "In auto ramp up scenario this is the step to to add/remove from <code>ReroutePercentage</code> until it reaches \n <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specificed in <code>ChangeIntervalInMinutes</code>.\n Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.",
          "type": "number"
        },
        "changeIntervalInMinutes": {
          "format": "int32",
          "description": "Specifies interval in mimuntes to reevaluate ReroutePercentage.",
          "type": "integer"
        },
        "minReroutePercentage": {
          "format": "double",
          "description": "Specifies lower boundary above which ReroutePercentage will stay.",
          "type": "number"
        },
        "maxReroutePercentage": {
          "format": "double",
          "description": "Specifies upper boundary below which ReroutePercentage will stay.",
          "type": "number"
        },
        "changeDecisionCallbackUrl": {
          "description": "Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.\n https://www.siteextensions.net/packages/TiPCallback/",
          "type": "string"
        },
        "name": {
          "description": "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.",
          "type": "string"
        }
      }
    },
    "RecoverResponse": {
      "description": "Response for an app recovery request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RecoverResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "ID of the recovery operation. Can be used to check the status of the corresponding operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RelayServiceConnectionEntity": {
      "description": "Hybrid Connection for an App Service app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RelayServiceConnectionEntity resource specific properties",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "entityConnectionString": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "resourceConnectionString": {
              "type": "string"
            },
            "hostname": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "type": "integer"
            },
            "biztalkUri": {
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RequestsBasedTrigger": {
      "description": "Trigger based on total requests.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Azure resource.",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceHealthMetadata": {
      "description": "Used for getting ResourceHealthCheck settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ResourceHealthMetadata resource specific properties",
          "properties": {
            "id": {
              "description": "ARM Resource Id",
              "type": "string"
            },
            "category": {
              "description": "The category that the resource matches in the RHC Policy File",
              "type": "string"
            },
            "signalAvailability": {
              "description": "Is there a health signal for the resource",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResourceMetric": {
      "description": "Object representing a metric for any resource .",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ResourceMetricName",
          "description": "Name of metric.",
          "readOnly": true
        },
        "unit": {
          "description": "Metric unit.",
          "type": "string",
          "readOnly": true
        },
        "timeGrain": {
          "description": "Metric granularity. E.g PT1H, PT5M, P1D",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "date-time",
          "description": "Metric start time.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "Metric end time.",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "Metric resource Id.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "metricValues": {
          "description": "Metric values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricValue"
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricProperty"
          },
          "readOnly": true
        }
      }
    },
    "ResourceMetricAvailability": {
      "description": "Metrics availability and retention.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "Time grain .",
          "type": "string",
          "readOnly": true
        },
        "retention": {
          "description": "Retention period for the current time grain.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricCollection": {
      "description": "Collection of metric responses.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetric"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ResourceMetricDefinition": {
      "description": "Metadata for the metrics.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ResourceMetricDefinition resource specific properties",
          "properties": {
            "name": {
              "$ref": "#/definitions/ResourceMetricName",
              "description": "Name of the metric.",
              "readOnly": true
            },
            "unit": {
              "description": "Unit of the metric.",
              "type": "string",
              "readOnly": true
            },
            "primaryAggregationType": {
              "description": "Primary aggregation type.",
              "type": "string",
              "readOnly": true
            },
            "metricAvailabilities": {
              "description": "List of time grains supported for the metric together with retention period.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceMetricAvailability"
              },
              "readOnly": true
            },
            "resourceUri": {
              "description": "Resource URI.",
              "type": "string",
              "readOnly": true
            },
            "id": {
              "description": "Resource ID.",
              "type": "string",
              "readOnly": true
            },
            "properties": {
              "description": "Properties.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ResourceMetricDefinitionCollection": {
      "description": "Collection of metric definitions.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricDefinition"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "ResourceMetricName": {
      "description": "Name of a metric for any resource .",
      "type": "object",
      "properties": {
        "value": {
          "description": "metric name value.",
          "type": "string",
          "readOnly": true
        },
        "localizedValue": {
          "description": "Localized metric name value.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricProperty": {
      "description": "Resource metric property.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key for resource metric property.",
          "type": "string"
        },
        "value": {
          "description": "Value of pair.",
          "type": "string"
        }
      }
    },
    "ResourceMetricValue": {
      "description": "Value of resource metric.",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "Value timestamp.",
          "type": "string",
          "readOnly": true
        },
        "average": {
          "format": "float",
          "description": "Value average.",
          "type": "number",
          "readOnly": true
        },
        "minimum": {
          "format": "float",
          "description": "Value minimum.",
          "type": "number",
          "readOnly": true
        },
        "maximum": {
          "format": "float",
          "description": "Value maximum.",
          "type": "number",
          "readOnly": true
        },
        "total": {
          "format": "float",
          "description": "Value total.",
          "type": "number",
          "readOnly": true
        },
        "count": {
          "format": "float",
          "description": "Value count.",
          "type": "number",
          "readOnly": true
        },
        "properties": {
          "description": "Properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricProperty"
          },
          "readOnly": true
        }
      }
    },
    "RestoreRequest": {
      "description": "Description of a restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreRequest resource specific properties",
          "required": [
            "storageAccountUrl",
            "overwrite"
          ],
          "properties": {
            "storageAccountUrl": {
              "description": "SAS URL to the container.",
              "type": "string"
            },
            "blobName": {
              "description": "Name of a blob which contains the backup.",
              "type": "string"
            },
            "overwrite": {
              "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
              "type": "boolean"
            },
            "siteName": {
              "description": "Name of an app.",
              "type": "string"
            },
            "databases": {
              "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "ignoreConflictingHostNames": {
              "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \n the app's object when it is being restored, but that might fail due to conflicts during the operation.",
              "default": false,
              "type": "boolean"
            },
            "operationType": {
              "description": "Operation type.",
              "default": "Default",
              "enum": [
                "Default",
                "Clone",
                "Relocation"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            },
            "adjustConnectionStrings": {
              "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "hostingEnvironment": {
              "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RestoreResponse": {
      "description": "Response for an app restore request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RestoreResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "When server starts the restore process, it will return an operation ID identifying that particular restore operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Site": {
      "description": "A web app, a mobile app backend, or an API app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Site resource specific properties",
          "properties": {
            "state": {
              "description": "Current state of the app.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\n the app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of the app."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "premiumAppDeployed": {
              "description": "Indicates whether app is deployed as a premium app.",
              "type": "boolean",
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "microService": {
              "description": "Micro services like apps, logic apps.",
              "default": "WebSites",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "gatewaySiteName": {
              "description": "Name of gateway app associated with the app.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\n This only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteAuthSettings": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteAuthSettings resource specific properties",
          "properties": {
            "enabled": {
              "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "runtimeVersion": {
              "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\n The setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
              "type": "string"
            },
            "unauthenticatedClientAction": {
              "description": "The action to take when an unauthenticated client attempts to access the app.",
              "enum": [
                "RedirectToLoginPage",
                "AllowAnonymous"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UnauthenticatedClientAction",
                "modelAsString": false
              }
            },
            "tokenStoreEnabled": {
              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
              "type": "boolean"
            },
            "allowedExternalRedirectUrls": {
              "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\n This is an advanced setting typically only needed by Windows Store application backends.\n Note that URLs within the current domain are always implicitly allowed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultProvider": {
              "description": "The default authentication provider to use when multiple providers are configured.\n This setting is only needed if multiple providers are configured and the unauthenticated client\n action is set to \"RedirectToLoginPage\".",
              "enum": [
                "AzureActiveDirectory",
                "Facebook",
                "Google",
                "MicrosoftAccount",
                "Twitter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BuiltInAuthenticationProvider",
                "modelAsString": false
              }
            },
            "tokenRefreshExtensionHours": {
              "format": "double",
              "description": "The number of hours after session token expiration that a session token can be used to\n call the token refresh API. The default is 72 hours.",
              "type": "number"
            },
            "clientId": {
              "description": "The Client ID of this relying party application, known as the client_id.\n This setting is required for enabling OpenID Connection authentication with Azure Active Directory or \n other 3rd party OpenID Connect providers.\n More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecret": {
              "description": "The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\n This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\n Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\n More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "issuer": {
              "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\n When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\n This URI is a case-sensitive identifier for the token issuer.\n More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
              "type": "string"
            },
            "allowedAudiences": {
              "description": "Allowed audience values to consider when validating JWTs issued by \n Azure Active Directory. Note that the <code>ClientID</code> value is always considered an\n allowed audience, regardless of this setting.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "additionalLoginParams": {
              "description": "Login parameters to send to the OpenID Connect authorization endpoint when\n a user logs in. Each parameter must be in the form \"key=value\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "googleClientId": {
              "description": "The OpenID Connect Client ID for the Google web application.\n This setting is required for enabling Google Sign-In.\n Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleClientSecret": {
              "description": "The client secret associated with the Google web application.\n This setting is required for enabling Google Sign-In.\n Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "string"
            },
            "googleOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\n This setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\n Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "facebookAppId": {
              "description": "The App ID of the Facebook app used for login.\n This setting is required for enabling Facebook Login.\n Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookAppSecret": {
              "description": "The App Secret of the Facebook app used for Facebook Login.\n This setting is required for enabling Facebook Login.\n Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "string"
            },
            "facebookOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\n This setting is optional.\n Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "twitterConsumerKey": {
              "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\n This setting is required for enabling Twitter Sign-In.\n Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "twitterConsumerSecret": {
              "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in.\n This setting is required for enabling Twitter Sign-In.\n Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "microsoftAccountClientId": {
              "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\n This setting is required for enabling Microsoft Account authentication.\n Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountClientSecret": {
              "description": "The OAuth 2.0 client secret that was created for the app used for authentication.\n This setting is required for enabling Microsoft Account authentication.\n Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
              "type": "string"
            },
            "microsoftAccountOAuthScopes": {
              "description": "The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\n This setting is optional. If not specified, \"wl.basic\" is used as the default scope.\n Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteCloneability": {
      "description": "Represents whether or not an app is cloneable.",
      "type": "object",
      "properties": {
        "result": {
          "description": "Name of app.",
          "enum": [
            "Cloneable",
            "PartiallyCloneable",
            "NotCloneable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloneAbilityResult",
            "modelAsString": false
          }
        },
        "blockingFeatures": {
          "description": "List of features enabled on app that prevent cloning.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "unsupportedFeatures": {
          "description": "List of features enabled on app that are non-blocking but cannot be cloned. The app can still be cloned\n but the features in this list will not be set up on cloned app.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "blockingCharacteristics": {
          "description": "List of blocking application characteristics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        }
      }
    },
    "SiteCloneabilityCriterion": {
      "description": "An app cloneability criterion.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of criterion.",
          "type": "string"
        },
        "description": {
          "description": "Description of criterion.",
          "type": "string"
        }
      }
    },
    "SiteConfig": {
      "description": "Configuration of an App Service app.",
      "type": "object",
      "properties": {
        "numberOfWorkers": {
          "format": "int32",
          "description": "Number of workers.",
          "type": "integer"
        },
        "defaultDocuments": {
          "description": "Default documents.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "netFrameworkVersion": {
          "description": ".NET Framework version.",
          "default": "v4.6",
          "type": "string"
        },
        "phpVersion": {
          "description": "Version of PHP.",
          "type": "string"
        },
        "pythonVersion": {
          "description": "Version of Python.",
          "type": "string"
        },
        "nodeVersion": {
          "description": "Version of Node.js.",
          "type": "string"
        },
        "linuxFxVersion": {
          "description": "Linux App Framework and version",
          "type": "string"
        },
        "requestTracingEnabled": {
          "description": "<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "requestTracingExpirationTime": {
          "format": "date-time",
          "description": "Request tracing expiration time.",
          "type": "string"
        },
        "remoteDebuggingEnabled": {
          "description": "<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "remoteDebuggingVersion": {
          "description": "Remote debugging version.",
          "type": "string"
        },
        "httpLoggingEnabled": {
          "description": "<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "logsDirectorySizeLimit": {
          "format": "int32",
          "description": "HTTP logs directory size limit.",
          "type": "integer"
        },
        "detailedErrorLoggingEnabled": {
          "description": "<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "publishingUsername": {
          "description": "Publishing user name.",
          "type": "string"
        },
        "appSettings": {
          "description": "Application settings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "connectionStrings": {
          "description": "Connection strings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnStringInfo"
          }
        },
        "machineKey": {
          "$ref": "#/definitions/SiteMachineKey",
          "description": "Site MachineKey.",
          "readOnly": true
        },
        "handlerMappings": {
          "description": "Handler mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HandlerMapping"
          }
        },
        "documentRoot": {
          "description": "Document root.",
          "type": "string"
        },
        "scmType": {
          "description": "SCM type.",
          "enum": [
            "None",
            "Dropbox",
            "Tfs",
            "LocalGit",
            "GitHub",
            "CodePlexGit",
            "CodePlexHg",
            "BitbucketGit",
            "BitbucketHg",
            "ExternalGit",
            "ExternalHg",
            "OneDrive",
            "VSO"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScmType",
            "modelAsString": true
          }
        },
        "use32BitWorkerProcess": {
          "description": "<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "webSocketsEnabled": {
          "description": "<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "alwaysOn": {
          "description": "<code>true</code> if Always On is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "javaVersion": {
          "description": "Java version.",
          "type": "string"
        },
        "javaContainer": {
          "description": "Java container.",
          "type": "string"
        },
        "javaContainerVersion": {
          "description": "Java container version.",
          "type": "string"
        },
        "appCommandLine": {
          "description": "App command line to launch.",
          "type": "string"
        },
        "managedPipelineMode": {
          "description": "Managed pipeline mode.",
          "enum": [
            "Integrated",
            "Classic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedPipelineMode",
            "modelAsString": false
          }
        },
        "virtualApplications": {
          "description": "Virtual applications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualApplication"
          }
        },
        "loadBalancing": {
          "description": "Site load balancing.",
          "enum": [
            "WeightedRoundRobin",
            "LeastRequests",
            "LeastResponseTime",
            "WeightedTotalTraffic",
            "RequestHash"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SiteLoadBalancing",
            "modelAsString": false
          }
        },
        "experiments": {
          "$ref": "#/definitions/Experiments",
          "description": "This is work around for polymophic types."
        },
        "limits": {
          "$ref": "#/definitions/SiteLimits",
          "description": "Site limits."
        },
        "autoHealEnabled": {
          "description": "<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "autoHealRules": {
          "$ref": "#/definitions/AutoHealRules",
          "description": "Auto Heal rules."
        },
        "tracingOptions": {
          "description": "Tracing options.",
          "type": "string"
        },
        "vnetName": {
          "description": "Virtual Network name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "cors": {
          "$ref": "#/definitions/CorsSettings",
          "description": "Cross-Origin Resource Sharing (CORS) settings."
        },
        "push": {
          "$ref": "#/definitions/PushSettings",
          "description": "Push endpoint settings."
        },
        "apiDefinition": {
          "$ref": "#/definitions/ApiDefinitionInfo",
          "description": "Information about the formal API definition for the app."
        },
        "autoSwapSlotName": {
          "description": "Auto-swap slot name.",
          "type": "string"
        },
        "localMySqlEnabled": {
          "description": "<code>true</code> to enable local MySQL; otherwise, <code>false</code>.",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "SiteConfigResource": {
      "description": "Web app configuration ARM resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SiteConfig",
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteConfigResourceCollection": {
      "description": "Collection of site configurations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteConfigResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "SiteConfigurationSnapshotInfo": {
      "description": "A snapshot of a web app configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteConfigurationSnapshotInfo resource specific properties",
          "properties": {
            "time": {
              "format": "date-time",
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            },
            "id": {
              "format": "int32",
              "description": "The id of the snapshot",
              "type": "integer",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteInstance": {
      "description": "Instance of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteInstance resource specific properties",
          "properties": {
            "name": {
              "description": "Name of instance.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteLimits": {
      "description": "Metric limits set on an app.",
      "type": "object",
      "properties": {
        "maxPercentageCpu": {
          "format": "double",
          "description": "Maximum allowed CPU usage percentage.",
          "type": "number"
        },
        "maxMemoryInMb": {
          "format": "int64",
          "description": "Maximum allowed memory usage in MB.",
          "type": "integer"
        },
        "maxDiskSizeInMb": {
          "format": "int64",
          "description": "Maximum allowed disk size usage in MB.",
          "type": "integer"
        }
      }
    },
    "SiteLogsConfig": {
      "description": "Configuration of App Service site logs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteLogsConfig resource specific properties",
          "properties": {
            "applicationLogs": {
              "$ref": "#/definitions/ApplicationLogsConfig",
              "description": "Application logs configuration."
            },
            "httpLogs": {
              "$ref": "#/definitions/HttpLogsConfig",
              "description": "HTTP logs configuration."
            },
            "failedRequestsTracing": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Failed requests tracing configuration."
            },
            "detailedErrorMessages": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Detailed error messages configuration."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteMachineKey": {
      "description": "MachineKey of an app.",
      "type": "object",
      "properties": {
        "validation": {
          "description": "MachineKey validation.",
          "type": "string"
        },
        "validationKey": {
          "description": "Validation key.",
          "type": "string"
        },
        "decryption": {
          "description": "Decryption.",
          "type": "string"
        },
        "decryptionKey": {
          "description": "Decryption key.",
          "type": "string"
        }
      }
    },
    "SitePhpErrorLogFlag": {
      "description": "Used for getting PHP error logging flag.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SitePhpErrorLogFlag resource specific properties",
          "properties": {
            "localLogErrors": {
              "description": "Local log_errors setting.",
              "type": "string"
            },
            "masterLogErrors": {
              "description": "Master log_errors setting.",
              "type": "string"
            },
            "localLogErrorsMaxLength": {
              "description": "Local log_errors_max_len setting.",
              "type": "string"
            },
            "masterLogErrorsMaxLength": {
              "description": "Master log_errors_max_len setting.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteSourceControl": {
      "description": "Source control configuration for an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SiteSourceControl resource specific properties",
          "properties": {
            "repoUrl": {
              "description": "Repository or source control URL.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "branch": {
              "description": "Name of branch to use for deployment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isManualIntegration": {
              "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "deploymentRollbackEnabled": {
              "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isMercurial": {
              "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotConfigNames": {
      "description": "Names for connection strings and application settings to be marked as sticky to the deployment slot and not moved during a swap operation.\n This is valid for all deployment slots in an app.",
      "type": "object",
      "properties": {
        "connectionStringNames": {
          "description": "List of connection string names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appSettingNames": {
          "description": "List of application settings names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SlotConfigNamesResource": {
      "description": "Slot Config names azure resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SlotConfigNames",
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifference": {
      "description": "A setting difference between two deployment slots of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SlotDifference resource specific properties",
          "properties": {
            "type": {
              "description": "Type of the difference: Information, Warning or Error.",
              "type": "string",
              "readOnly": true
            },
            "settingType": {
              "description": "The type of the setting: General, AppSetting or ConnectionString.",
              "type": "string",
              "readOnly": true
            },
            "diffRule": {
              "description": "Rule that describes how to process the setting difference during a slot swap.",
              "type": "string",
              "readOnly": true
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string",
              "readOnly": true
            },
            "valueInCurrentSlot": {
              "description": "Value of the setting in the current slot.",
              "type": "string",
              "readOnly": true
            },
            "valueInTargetSlot": {
              "description": "Value of the setting in the target slot.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Description of the setting difference.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifferenceCollection": {
      "description": "Collection of slot differences.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlotDifference"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "SlotSwapStatus": {
      "description": "The status of the last successfull slot swap operation.",
      "type": "object",
      "properties": {
        "timestampUtc": {
          "format": "date-time",
          "description": "The time the last successful slot swap completed.",
          "type": "string",
          "readOnly": true
        },
        "sourceSlotName": {
          "description": "The source slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        },
        "destinationSlotName": {
          "description": "The destination slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SlowRequestsBasedTrigger": {
      "description": "Trigger based on request execution time.",
      "type": "object",
      "properties": {
        "timeTaken": {
          "description": "Time taken.",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of an app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Snapshot resource specific properties",
          "properties": {
            "time": {
              "format": "date-time",
              "description": "The time the snapshot was taken.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotCollection": {
      "description": "Collection of snapshots which can be used to revert an app to a previous time.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "StatusCodesBasedTrigger": {
      "description": "Trigger based on status code.",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "subStatus": {
          "format": "int32",
          "description": "SubStatus.",
          "type": "integer"
        },
        "win32Status": {
          "format": "int32",
          "description": "Win32 error code.",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "StorageMigrationOptions": {
      "description": "Options for app content migration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationOptions resource specific properties",
          "required": [
            "azurefilesConnectionString",
            "azurefilesShare"
          ],
          "properties": {
            "azurefilesConnectionString": {
              "description": "AzureFiles connection string.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "azurefilesShare": {
              "description": "AzureFiles share.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ]
            },
            "switchSiteAfterMigration": {
              "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            },
            "blockWriteAccessToSite": {
              "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationResponse": {
      "description": "Response for a migration of app content request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "StorageMigrationResponse resource specific properties",
          "properties": {
            "operationId": {
              "description": "When server starts the migration process, it will return an operation ID identifying that particular migration operation.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StringDictionary": {
      "description": "String dictionary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Settings.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "User": {
      "description": "User crendentials used for publishing activity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "User resource specific properties",
          "required": [
            "publishingUserName"
          ],
          "properties": {
            "name": {
              "description": "Username",
              "type": "string",
              "x-ms-client-name": "UserName"
            },
            "publishingUserName": {
              "description": "Username used for publishing.",
              "type": "string"
            },
            "publishingPassword": {
              "format": "password",
              "description": "Password used for publishing.",
              "type": "string"
            },
            "publishingPasswordHash": {
              "format": "password",
              "description": "Password hash used for publishing.",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "format": "password",
              "description": "Password hash salt used for publishing.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualApplication": {
      "description": "Virtual application in an app.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Virtual path.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        },
        "preloadEnabled": {
          "description": "<code>true</code> if preloading is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "virtualDirectories": {
          "description": "Virtual directories for virtual application.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDirectory"
          }
        }
      }
    },
    "VirtualDirectory": {
      "description": "Directory for virtual application.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Path to virtual application.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        }
      }
    },
    "VnetGateway": {
      "description": "The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetGateway resource specific properties",
          "required": [
            "vpnPackageUri"
          ],
          "properties": {
            "vnetName": {
              "description": "The Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "vpnPackageUri": {
              "description": "The URI where the VPN package can be downloaded.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "Virtual Network information contract.",
      "type": "object",
      "properties": {
        "vnetResourceId": {
          "description": "The Virtual Network's resource ID.",
          "type": "string"
        },
        "certThumbprint": {
          "description": "The client certificate thumbprint.",
          "type": "string",
          "readOnly": true
        },
        "certBlob": {
          "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \n Point-To-Site VPN connection.",
          "type": "string"
        },
        "routes": {
          "description": "The routes that this Virtual Network connection uses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VnetRoute"
          },
          "readOnly": true
        },
        "resyncRequired": {
          "description": "<code>true</code> if a resync is required; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "dnsServers": {
          "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
          "type": "string"
        }
      }
    },
    "VnetRoute": {
      "description": "Virtual Network route contract used to pass routing information for a Virtual Network.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VnetRoute resource specific properties",
          "properties": {
            "name": {
              "description": "The name of this route. This is only returned by the server and does not need to be set by the client.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "x-ms-client-name": "vnetRouteName"
            },
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\n DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\n INHERITED - Routes inherited from the real Virtual Network routes\n STATIC - Static route set on the app only\n \n These values will be used for syncing an app's routes with those from a Virtual Network.",
              "enum": [
                "DEFAULT",
                "INHERITED",
                "STATIC"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RouteType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebAppCollection": {
      "description": "Collection of App Service apps.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "WebAppInstanceCollection": {
      "description": "Collection of app instances.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteInstance"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
